- move field-related logic from Scene into FieldCalculator
  - takes parameters (e.g., focal length) not objects (lens)
  - add camera back into Scene 

- move class methods from Camera into Cameras

- rename Exposure -> ExposureCalculator

- rename *Value classes
  - ApertureValue -> Value
  - move to main directory

- change {min,max}_{shutter,aperture} to Range
  - add #speeds setter to parse string representation

- fix Brightness/Illumination
  - use correct units & math
    - illumination: lux, foot-candle
    - brightness: cd/m2, foot-lambert
  - change Exposure to take 'light' instead of 'brightness'
    - handles either Brightness or Illumination

- add format attribute to Value?
  - base value stays the same
  - parsing detects format if necessary
  - can also modify later
  - or just specify to to_s as currently
  - but format determines formatting & conversion
  - eg, Length(format: :metric) or Aperture(format: :fstop)

- build tests for calculators (use existing tools?)

- convert Tool#test into something useful
  
- create Subject class
  - distance
  - height/width/depth
  - near/far depth of field
  - handles DoF calculations
  
- add print size to Scene
  - calculateÂ best CoC according to print size
  
- create Medium class?
  - eg, film, plate, instant, CCD/CMOS
  - with #sensitivity

- add shutter range/current to Lens
  - camera.shutter || lens.shutter

- add common brightness values to Brightness class
  - eg, open shade, bright sun, etc.
    
- add lighting formulas
  http://www.lightsearch.com/resources/lightguides/formulas.html
  http://www.birket.com/technical-library/143/
  
- add flash calculation
  http://www.scantips.com/lights/flashbasics1c.html
  http://www.portraitlighting.net/inversesquare_law.htm
  http://en.wikipedia.org/wiki/Guide_number